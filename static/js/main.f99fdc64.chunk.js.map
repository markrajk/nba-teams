{"version":3,"sources":["components/Button/Button.module.css","components/Panel/Panel.module.css","components/List/ListItem/ListItem.module.css","components/List/List.module.css","assets/logo.png","components/Logo/Logo.module.css","components/Layout/Layout.module.css","components/List/ListItem/ListItem.js","components/Button/Button.js","components/List/List.js","components/Logo/Logo.js","components/Panel/Panel.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","Active","Panel","Title","Header","ListItem","Selected","List","Buttons","__webpack_require__","p","Logo","Layout","props","react_default","a","createElement","className","selected","classes","onClick","clicked","item","full_name","active","join","children","components_Button_Button","filter","activeBtn","teams","length","map","e","i","List_ListItem_ListItem","key","id","selectTeam","src","logo","alt","components_Logo_Logo","city","name","conference","division","addFavorite","state","favorites","selectedTeamHandler","team","_this","setState","addFavoriteHandler","Object","toConsumableArray","some","index","indexOf","splice","push","filterTeamsHandler","evt","result","_this2","this","fetch","then","data","json","catch","error","console","log","_this3","components_List_List","components_Panel_Panel","Component","App","components_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f99fdc64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3-G0N\",\"Active\":\"Button_Active__21oIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"Panel_Panel__284zl\",\"Title\":\"Panel_Title__TWW-9\",\"Header\":\"Panel_Header__3dtZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ListItem_ListItem__1LgTe\",\"Selected\":\"ListItem_Selected__18e1G ListItem_ListItem__1LgTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__O6I2y\",\"Buttons\":\"List_Buttons__3ifN3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.e69a6812.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2YKjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3NgRx\"};","import React from 'react';\r\n\r\nimport classes from './ListItem.module.css';\r\n\r\nconst ListItem = (props) => {\r\n    return (\r\n        <div\r\n            className={props.selected ? classes.Selected : classes.ListItem} \r\n            onClick={() => props.clicked(props.item)}>{props.item.full_name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <button \r\n            //className={classes.Button}\r\n            className={props.active ? [classes.Button, classes.Active].join(' ') : classes.Button}\r\n            onClick={props.clicked}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport ListItem from './ListItem/ListItem';\r\nimport Button from '../Button/Button';\r\n\r\nimport classes from './List.module.css';\r\n\r\nconst List = (props) => {\r\n    return (\r\n        <div className={classes.List}>\r\n            <div className={classes.Buttons}>\r\n                <Button clicked={() => props.filter(false)} active={props.activeBtn ? false : true}>All</Button>\r\n                <Button clicked={() => props.filter(true)} active={props.activeBtn ? true : false}>Favorites</Button>\r\n            </div>\r\n            {\r\n                props.teams.length === 0 ? <p>Select favorite teams</p> :\r\n                props.teams.map((e, i) => \r\n                    <ListItem \r\n                        key={e.id} \r\n                        item={e} \r\n                        selected={e === props.selected ? true : false}\r\n                        clicked={props.selectTeam}\r\n                />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React from 'react';\r\n\r\nimport logo from '../../assets/logo.png';\r\nimport classes from './Logo.module.css';\r\n//import classes from './Logo.module.css';\r\n\r\nconst Logo = (props) => (\r\n    <div >\r\n        <img className={classes.Logo} src={logo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nimport Button from '../Button/Button';\r\nimport Logo from '../Logo/Logo';\r\n\r\nimport classes from './Panel.module.css'\r\n\r\nconst Panel = (props) => {\r\n    return (\r\n        <div className={classes.Panel}>\r\n            <div className={classes.Header}>\r\n                <div className={classes.Title}>\r\n                    <Logo/>\r\n                    <div>\r\n                        <h2>{props.selected.city}</h2>\r\n                        <h1>{props.selected.name}</h1>\r\n                        <h3>{props.selected.conference} {props.selected.division}</h3>\r\n                    </div>\r\n                </div>\r\n                <Button clicked={() => props.addFavorite(props.selected)} selected={props.selected} active={props.activeBtn}>Add</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel;","import React, { Component } from 'react';\r\n\r\nimport List from '../List/List';\r\nimport Panel from '../Panel/Panel';\r\n\r\nimport classes from './Layout.module.css';\r\n\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        teams: [],\r\n        selected: '',\r\n        favorites: [],\r\n        filter: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const baseURL = 'https://www.balldontlie.io/api/v1/teams';\r\n        let result;\r\n        fetch(baseURL).then(data => data.json())\r\n            .then(data => {\r\n                result = data.data;\r\n                this.setState({teams: result, selected: result[0]})\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    selectedTeamHandler = (team) => {\r\n        this.setState({selected: team})\r\n    }\r\n\r\n    addFavoriteHandler = (team) => {\r\n        const favorites = [...this.state.favorites];\r\n        if(favorites.some(e => e === team)) {\r\n            let index = favorites.indexOf(team);\r\n            if (index !== -1) favorites.splice(index, 1);\r\n            this.setState({favorites: favorites});\r\n        }else {\r\n            favorites.push(team);\r\n            this.setState({favorites: favorites});\r\n        }\r\n    }\r\n\r\n    filterTeamsHandler = (evt) => {\r\n        if(evt) {\r\n            this.setState({filter: true});\r\n        }else {\r\n            this.setState({filter: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <List \r\n                    activeBtn = {this.state.filter}\r\n                    teams={this.state.filter ? this.state.favorites : this.state.teams}\r\n                    selected={this.state.selected}\r\n                    selectTeam={this.selectedTeamHandler}\r\n                    filter={this.filterTeamsHandler}/>\r\n                <Panel \r\n                    activeBtn={this.state.favorites.some(e => e === this.state.selected)}\r\n                    selected={this.state.selected} \r\n                    addFavorite={this.addFavoriteHandler}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}